admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 8080 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 80 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: gateway
              domains: ["*"]
              routes:
              - match: { prefix: "/auth" }
                route:
                  cluster: webauthsvc
                per_filter_config:
                  envoy.ext_authz:
                    disabled: true
              - match: { prefix: "/stella.book.v1.BookService" }
                route:
                  cluster: booksvc
                  max_grpc_timeout: 0s
              - match: { prefix: "/" }
                route:
                  cluster: frontend
                per_filter_config:
                  envoy.ext_authz:
                    disabled: true
              # cors:
              #   allow_origin:
              #   - "*"
              #   allow_methods: GET, PUT, DELETE, POST, OPTIONS
              #   allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
              #   max_age: "1728000"
              #   expose_headers: custom-header-1,grpc-status,grpc-message
              #   enabled: true
          access_log:
          - name: envoy.file_access_log
            config:
              path: /dev/stdout
          http_filters:
          - name: envoy.ext_authz
            config:
              grpc_service:
                envoy_grpc:
                  cluster_name: authsvc
                timeout: 0.5s
          - name: envoy.grpc_web
          # - name: envoy.cors
          - name: envoy.router
  clusters:
  - name: booksvc
    connect_timeout: 1s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: booksvc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ include "stella.booksvc.fullname" . }}
                port_value: {{ .Values.booksvc.service.port }}
  - name: rentalsvc
    connect_timeout: 1s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: rentalsvc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ include "stella.rentalsvc.fullname" . }}
                port_value: {{ .Values.rentalsvc.service.port }}
  - name: ratingsvc
    connect_timeout: 1s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: ratingsvc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ include "stella.ratingsvc.fullname" . }}
                port_value: {{ .Values.ratingsvc.service.port }}

  - name: webauthsvc
    connect_timeout: 0.25s
    type: logical_dns
    # http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: webauthsvc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ include "stella.authsvc.fullname" . }}
                port_value: {{ .Values.authsvc.service.port }}
  - name: authsvc
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    # lb_policy: round_robin
    load_assignment:
      cluster_name: authsvc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{ include "stella.authsvc.fullname" . }}
                port_value: {{ .Values.authsvc.service.port }}
  - name: frontend
    connect_timeout: 1s
    type: logical_dns
    # http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: frontend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: host.docker.internal
                port_value: 3000
